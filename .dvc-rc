alias dv=dvc
alias dva="dvc add"

# Config
alias dvcg="dvc config"
alias dvcgct="dvc config cache.type"
alias dvcgctl="dvc config cache.type reflink,symlink,hardlink,copy"
alias dvcgg="dvc config --global"
alias dvcggct="dvc config --global cache.type"
alias dvcggctl="dvc config --global cache.type reflink,symlink,hardlink,copy"

# Checkout
alias dvco="dvc checkout"
alias dvcorl="dvc checkout --relink"

# GC
alias dvgc="dvc gc"
alias dvgcw="dvc gc -w"
alias dvgcwf="dvc gc -w -f"
alias dvgcwn="dvc gc -w --dry -f"
alias dvgcwr="dvc gc -w --not-in-remote"
alias dvgcwrf="dvc gc -w --not-in-remote -f"
alias dvgcwrn="dvc gc -w --not-in-remote --dry -f"

# ls
alias dvl="dvc ls"
alias dvlr="dvc ls -R"

alias dvm="dvc commit"
alias dvmv="dvc mv"
alias dvpl="dvc pull"
alias dvps="dvc push"
alias dvpt="dvc status"
alias dvr="dvc remote"
alias dvrl="dvc remote list"

# Status
alias dvs="dvc data status"
alias dvsg="dvc data status --granular"

alias dvscj="dvc data status --json"
dvc_data_status_jq() {
    dvc data status --json | jq "$@"
}
export -f dvc_data_status_jq
defn dvscjq dvc_data_status_jq

alias dvsj="dvc data status --unchanged --json"
dvc_data_status_unchanged_jq() {
    dvc data status --unchanged --json | jq "$@"
}
export -f dvc_data_status_unchanged_jq
defn dvsjq dvc_data_status_unchanged_jq
alias dvsa="dvc data status --unchanged"
alias dvsu="dvc data status --unchanged"

dvc_list_category() {
    if [ $# -ne 1 ]; then
        echo "Usage: $0 <category (i.e. unchanged, uncommitted.modified, uncommitted.deleted)>" >&2
        return 1
    fi
    category="$1"
    dvc data status --unchanged --json | jq -r "(.$category // [])[]"
}
export -f dvc_list_category
defn dvlu dvc_list_category unchanged
defn dvld dvc_list_category uncommitted.deleted
defn dvlm dvc_list_category uncommitted.modified
defn dvlt dvc_list_category not_in_cache

dvc_diff_file() {
    if [ $# -ne 1 ]; then
        echo "Usage: $0 <path to file or .dvc>" >&2
        return 1
    fi
    d="$1"; shift
    f="${d%.dvc}"
    if [ "$d" == "$f" ]; then
        d="${f}.dvc"
    fi
    num_outs="$(cat "$d" | yq '.outs | length')"
    if [ "$num_outs" != "1" ]; then
        echo "Found $num_outs in $d" >&2
        return 2
    fi
    md5="$(cat "$d" | yq -r '.outs[0].md5')"
    dir="${md5:0:2}"
    base="${md5:2}"
    cache="$(dvc cache dir)"
    blob="$cache/files/md5/$dir/$base"
    diff "$blob" "$f"
}
export -f dvc_diff_file
defn dvdf dvc_diff_file
